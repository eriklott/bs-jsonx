// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Encode$BsJsoncodec = require("../src/encode.bs.js");

describe("Encode", (function () {
        describe("#encode", (function () {
                return Jest.test("encodes values to json string", (function () {
                              var got = Encode$BsJsoncodec.encode(0, Encode$BsJsoncodec.object$prime(/* :: */[
                                        /* tuple */[
                                          "name",
                                          Encode$BsJsoncodec.string("John Doe")
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            "age",
                                            Encode$BsJsoncodec.$$int(41)
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              "height",
                                              Encode$BsJsoncodec.$$float(183.4)
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                "has_hair",
                                                Encode$BsJsoncodec.bool(/* true */1)
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  "parent_id",
                                                  Encode$BsJsoncodec.$$null
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    "pets",
                                                    Encode$BsJsoncodec.array(/* array */[
                                                          Encode$BsJsoncodec.string("fluffy"),
                                                          Encode$BsJsoncodec.string("zoomer"),
                                                          Encode$BsJsoncodec.string("oscar")
                                                        ])
                                                  ],
                                                  /* :: */[
                                                    /* tuple */[
                                                      "fav_colors",
                                                      Encode$BsJsoncodec.list(/* :: */[
                                                            Encode$BsJsoncodec.string("red"),
                                                            /* :: */[
                                                              Encode$BsJsoncodec.string("white"),
                                                              /* [] */0
                                                            ]
                                                          ])
                                                    ],
                                                    /* [] */0
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]));
                              return Jest.Expect[/* toEqual */12](got, Jest.Expect[/* expect */0]("{\"name\":\"John Doe\",\"age\":41,\"height\":183.4,\"has_hair\":true,\"parent_id\":null,\"pets\":[\"fluffy\",\"zoomer\",\"oscar\"],\"fav_colors\":[\"red\",\"white\"]}"));
                            }));
              }));
        return /* () */0;
      }));

/*  Not a pure module */
